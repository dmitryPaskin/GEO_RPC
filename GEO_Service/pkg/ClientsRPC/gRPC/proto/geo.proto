syntax = "proto3";

package geo;

option go_package = "GeoServiseAppDate/ServersRPC/gRPC/pkg/geo;geo";

import "google/protobuf/any.proto";

service GeoService{
  rpc SearchService(SearchRequest)returns(AddressSearch);
  rpc GeocodeAddressService(GeocodeRequest)returns(AddressGeo);
}

message AddressSearch {
  string source = 1;
  string result = 2;
  string postal_code = 3;
  string country = 4;
  string country_iso_code = 5;
  string federal_district = 6;
  string region_fias_id = 7;
  string region_kladr_id = 8;
  string region_iso_code = 9;
  string region_with_type = 10;
  string region_type = 11;
  string region_type_full = 12;
  string region = 13;
  google.protobuf.Any area_fias_id = 14;
  google.protobuf.Any area_kladr_id = 15;
  google.protobuf.Any area_with_type = 16;
  google.protobuf.Any area_type = 17;
  google.protobuf.Any area_type_full = 18;
  google.protobuf.Any area = 19;
  google.protobuf.Any city_fias_id = 20;
  google.protobuf.Any city_kladr_id = 21;
  string city_with_type = 22;
  string city_type = 23;
  string city_type_full = 24;
  string city = 25;
  string city_area = 26;
  google.protobuf.Any city_district_fias_id = 27;
  google.protobuf.Any city_district_kladr_id = 28;
  string city_district_with_type = 29;
  string city_district_type = 30;
  string city_district_type_full = 31;
  string city_district = 32;
  google.protobuf.Any settlement_fias_id = 33;
  google.protobuf.Any settlement_kladr_id = 34;
  google.protobuf.Any settlement_with_type = 35;
  google.protobuf.Any settlement_type = 36;
  google.protobuf.Any settlement_type_full = 37;
  google.protobuf.Any settlement = 38;
  string street_fias_id = 39;
  string street_kladr_id = 40;
  string street_with_type = 41;
  string street_type = 42;
  string street_type_full = 43;
  string street = 44;
  google.protobuf.Any stead_fias_id = 45;
  google.protobuf.Any stead_kladr_id = 46;
  google.protobuf.Any stead_cadnum = 47;
  google.protobuf.Any stead_type = 48;
  google.protobuf.Any stead_type_full = 49;
  google.protobuf.Any stead = 50;
  string house_fias_id = 51;
  string house_kladr_id = 52;
  string house_cadnum = 53;
  string house_type = 54;
  string house_type_full = 55;
  string house = 56;
  google.protobuf.Any block_type = 57;
  google.protobuf.Any block_type_full = 58;
  google.protobuf.Any block = 59;
  google.protobuf.Any entrance = 60;
  google.protobuf.Any floor = 61;
  string flat_fias_id = 62;
  string flat_cadnum = 63;
  string flat_type = 64;
  string flat_type_full = 65;
  string flat = 66;
  string flat_area = 67;
  string square_meter_price = 68;
  string flat_price = 69;
  google.protobuf.Any postal_box = 70;
  string fias_id = 71;
  string fias_code = 72;
  string fias_level = 73;
  string fias_actuality_state = 74;
  string kladr_id = 75;
  string capital_marker = 76;
  string okato = 77;
  string oktmo = 78;
  string tax_office = 79;
  string tax_office_legal = 80;
  string timezone = 81;
  string geo_lat = 82;
  string geo_lon = 83;
  string beltway_hit = 84;
  google.protobuf.Any beltway_distance = 85;
  int64 qc_geo = 86;
  int64 qc_complete = 87;
  int64 qc_house = 88;
  int64 qc = 89;
  google.protobuf.Any unparsed_parts = 90;
  repeated Metro metro = 91;
}

message Metro {
  double distance = 1;
  string line = 2;
  string name = 3;
}

message AddressGeo {
  repeated Suggestion suggestions = 1;
}

message Suggestion {
  string value = 1;
  string unrestricted_value = 2;
  Data data = 3;
}

message Data {
  string postal_code = 1;
  string country = 2;
}

message SearchRequest{
  string Query = 1;
}

message GeocodeRequest{
  string Lat = 1;
  string Lon = 2;
}
